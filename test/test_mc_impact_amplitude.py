import unittest
from impact.ComputeGamma import ComputeGamma
import random

class TestMCImpactAmplitude(unittest.TestCase):

	def setUp(self):
		self.nominal_value = [1.0425104966795611, 1.0417019398660683, 1.0392831400951574, 1.0352745832412713, 1.0297099896883195, 1.0226356901637701, 1.0141097705046307, 1.0042010040697882, 0.99298759531802039, 0.9805557626938961, 0.96699819313785562, 0.95241240411966466, 0.93689905193227851, 0.92056022691971251, 0.90349777720135638, 0.88581170217231642, 0.86759865551631499, 0.84895059462340572, 0.82995360917474559, 0.81068695631937659, 0.79122232346636245, 0.77162333245493575, 0.75194529100557805, 0.73223518919984443, 0.71253193061847409, 0.69286678002922508, 0.67326400249335228, 0.65374166276131285, 0.63431254911797319, 0.61498518261912094, 0.59576487106630194, 0.57665476714809949, 0.55765689190271206, 0.53877308791830059, 0.52000587129948583, 0.50135915714317347, 0.48283883978855913, 0.46445321610706541, 0.44621324723695066, 0.42813266110828396, 0.41022790453344576, 0.39251795928124489, 0.37502404118555638, 0.35776920479961916, 0.34077787829937184, 0.32407535423697464, 0.30768726138951186, 0.29163904143984121, 0.27595545172157765, 0.26066011195495981, 0.24577510902084274, 0.23132066960645914, 0.21731490625404026, 0.20377363817880939, 0.19071028440921634, 0.17813582351016169, 0.16605881151598995, 0.15448544781220752, 0.14341967760479157, 0.13286331929825904, 0.1228162055193837, 0.11327632758547916, 0.10423997480637322, 0.095701861987088133, 0.087655240710067847, 0.080091992264384113, 0.073002702302839464, 0.066376719308817542, 0.0602022006264629, 0.054466151060782633, 0.049154459829520734, 0.044251941919768965, 0.039742389675318422, 0.035608639752446748, 0.031832659495946096, 0.028395655389617021, 0.025278204628168415, 0.022460409151872817, 0.0199220697952944, 0.017642876636394387, 0.015602610291093636, 0.013781347863474751, 0.012159666595240591, 0.010718837998172775, 0.0094410054133657658, 0.0083093385088494742, 0.0073081591668801892, 0.0064230344664523075, 0.0056408339608910217, 0.0049497500974546287, 0.0043392823311187781, 0.0038001871517570132, 0.0033243977802205221, 0.0029049186107608991, 0.0025357005148202109, 0.0022115038216190866, 0.0019277561212727565, 0.0016804119847044999, 0.0014658212712693789, 0.001280611930119619, 0.0011215921436875708]
		# This is important
		random.seed(1234)


	def testValues(self):

		ENERGY = 7000
		RHO    = 0.14
		SIGMA  = 98.3
		DSIGMA = 2.23
		DRHO =   0.007
		PROCESS = 'pp'
		
		# TODO: Try to add quiet/dead mode
		c = ComputeGamma(PROCESS, ENERGY, SIGMA, RHO) 
		result = c.generate_mc_gamma(100, 1, DSIGMA)

		for a, b in zip(result, self.nominal_value):
				self.assertAlmostEqual(a, b)
